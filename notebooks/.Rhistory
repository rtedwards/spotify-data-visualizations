tracks <- read.csv("data/SavedSongs29052019.csv", header = TRUE)
head(tracks)
type(tracks)
typeof(tracks)
tracks.df <- as.dataframe(read.csv(file = "data/SavedSongs29052019.csv", header = TRUE))
tracks.df <- as.data.frame(read.csv(file = "data/SavedSongs29052019.csv", header = TRUE))
typeof(tracks)
tracks.df <- read.csv(file = "data/SavedSongs29052019.csv", header = TRUE)
head(tracks)
tracks.df %>%
summarize()
library(ggplot2)
library(dplyr)
library(moderndive)
library(skimr)
library(tidyr)
library(kableExtra)
library(gridExtra)
library(xtable)
library(knitr)
library(GGally)
library(broom)
tracks.df %>%
summarize()
View(tracks.df)
head(life)
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(life), method="single"), labels=country , ylab="Distance",main="Single linkage")
par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(tracks.df), method="single"), labels=tracks.df['track_name'] , ylab="Distance",main="Single linkage")
colnames(tracks.df)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, key, liveness, loudness, speechiness, tempo, time_signature, valence)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, key, liveness, loudness, speechiness, tempo, time_signature, valence) %>%
slice(1:5)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, key, liveness, loudness, speechiness, tempo, time_signature, valence) %>%
slice(1:5)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, key, liveness, loudness, speechiness, tempo, time_signature, valence) %>%
glimpse()
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, key, liveness, loudness, speechiness, tempo, time_signature, valence) %>%
rownames(tracks_features.df) <- tracks.df['track_name']
par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=tracks.df['track_name'] , ylab="Distance",main="Single linkage")
dist(track_features.df)
head(track_features.df)
track_features.df %>%
dplyr::select(popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
#  dplyr::select(popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
dplyr::select(-tempo, -time_signature) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
dplyr::select(-tempo, -time_signature, -duration_ms) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
dplyr::select(-tempo, -time_signature, -duration_ms, -key) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
dplyr::select(-tempo, -time_signature, -duration_ms, -key, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
head(track_features.df)
track_features.df %>%
dplyr::select(-tempo, -time_signature, -duration_ms, -key, -popularity, -loudness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
?mutate_all
tracks_feature.df <- track_features.df %>%
mutate_all(funs(scale), popularity, loudness)
tracks_feature.df <- track_features.df %>%
select(popularity, loudness) %>%
mutate_all(funs(scale))
head(track_features.df)
tracks_feature.df <- track_features.df %>%
select(popularity, loudness) %>%
scale()
head(track_features.df)
tracks_feature.df <- track_features.df %>%
tracks_feature.df <- track_features.df %>%
mutate(popularity = scale(popularity) %>%
tracks_feature.df <- track_features.df %>%
tracks_feature.df <- track_features.df %>%
mutate(popularity = scale(popularity)) %>%
mutate(loudness = scale(loudness))
head(track_features.df)
tracks.df <- read.csv(file = "data/SavedSongs29052019.csv", header = TRUE)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
tracks_feature.df <- track_features.df %>%
mutate(popularity = scale(popularity))
head(track_features.df)
track_features.df %>%
mutate(popularity = scale(popularity))
track_features.df %>%
mutate(popularity = scale(popularity)) %>%
mutate(loudness = scale(loudness))
tracks.df <- read.csv(file = "data/SavedSongs29052019.csv", header = TRUE)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df %>%
mutate(popularity = (popularity - mean(popularity)) / sd(popularity) ) %>%
mutate(loudness = (abs(loudness) - mean(abs(loudness))) / sd(abs(loudness)) ) %>%
glimpse()
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df %>%
track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, duration_ms, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
track_features.df %>%
select(-tempo, -time_signature, -duration_ms, -key) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-time_signature, -duration_ms, -key) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-duration_ms, -key) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
track_features.df %>%
select(-duration_ms) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
#  select(-duration_ms) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-instrumentalness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-acousticness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-danceability) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-energy) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-liveness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-loudness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-speechiness) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
select(-valence) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
summarise()
track_features.df %>%
summarise(max = max())
ggplot(track_features.df, aes(x = continent)) +
geom_boxplot()
ggplot(track_features.df, aes()) +
geom_boxplot()
head(tracks_feature.df)
head(tracks_features.df)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
head(tracks_features.df)
head(track_features.df)
track_features.df %>%
select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
track_features <- track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
ggplot(track_features.df, aes()) +
geom_boxplot()
ggplot(stack(track_features.df), aes(x = ind, y = values)) +
geom_boxplot()
track_features <- track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
ggplot(stack(track_features.df), aes(x = ind, y = values)) +
geom_boxplot()
track_features.df <- track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
ggplot(stack(track_features.df), aes(x = ind, y = values)) +
geom_boxplot()
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Set1")
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.25) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Set1")
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.25) +
geom_vline(aes(xintercept=0)) +
#      theme_bw() +
scale_fill_brewer(palette="Set1")
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable)) +
geom_density(alpha=0.25) +
geom_vline(aes(xintercept=0)) +
theme_bw()
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, fill=Variable, color=Variable)) +
geom_density(alpha=0.25) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Set1")
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, color=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=tracks.df['track_name'] , ylab="Distance",main="Single linkage")
dist(track_features.df)
dist(life)
head(life)
View(life)
rownames(track_features.df) <- tracks.df['track_name']
row.names(track_features.df) <- tracks.df['track_name']
head(tracks.df['track_name'])
helength.out(tracks.df['track_name'])
length.out(tracks.df['track_name'])
length(tracks.df['track_name'])
length(tracks.df[:,'track_name'])
length(tracks.df[,'track_name'])
head(tracks.df[,'track_name'])
row.names(track_features.df) <- tracks.df[,'track_name']
rownames(track_features.df) <- tracks.df[,'track_name']
rownames(track_features.df) <- tracks.df[,'track_id']
dist(track_features.df)
head(track_features.df)
dist(track_features.df, 5)
?dist
dist(matrix(track_features.df))
row.names(track_features.df)
row.names(life)
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=tracks.df['track_id'] , ylab="Distance",main="Single linkage")
distMatrix <- dist(track_features.df)
head(distMatrix)
distMatrix
cluster <- hclust(distMatrix, method="single")
cluster
plot(cluster)
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), leaflab="none", ylab="Distance",main="Single linkage")
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), leaflab="none", ylab="Distance",main="Single linkage")
par(mfrow=c(1, 1))
plot(hclust(dist(track_features.df), method="single"), leaflab="none", ylab="Distance",main="Single linkage")
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
tracks.df <- read.csv(file = "data/SavedSongs29052019.csv", header = TRUE)
track_features.df <- tracks.df %>%
select(popularity, acousticness, danceability, energy, instrumentalness, liveness, loudness, speechiness, valence) %>%
glimpse()
track_features.df <- track_features.df %>%
mutate(popularity = (popularity - min(popularity)) / (max(popularity) - min(popularity)) ) %>%
mutate(instrumentalness = (instrumentalness - min(instrumentalness)) / (max(instrumentalness) - min(instrumentalness)) ) %>%
mutate(loudness = (abs(loudness) - min(abs(loudness))) / (max(abs(loudness)) - min(abs(loudness))) ) %>%
glimpse()
track_features.df %>%
#  select(-loudness, -popularity) %>%
gather(Variable, Value) %>%
ggplot(aes(x=Value, color=Variable)) +
geom_density(alpha=0.5) +
geom_vline(aes(xintercept=0)) +
theme_bw() +
scale_fill_brewer(palette="Spectral")
plot(hclust(dist(track_features.df), method="single"), leaflab="none", ylab="Distance",main="Single linkage")
?hclust
plot(hclust(dist(track_features.df), method="single"), labels=NULL, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, ylab="Distance",main="Complete linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, ylab="Distance",main="Complete linkage")
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="average"), labels=FALSE, ylab="Distance",main="Average linkage")
par(mfrow=c(1, 1))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
#par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, ylab="Distance",main="Complete linkage")
plot(hclust(dist(track_features.df), method="average"), labels=FALSE, ylab="Distance",main="Average linkage")
#par(mfrow=c(1, 1))
#par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, ylab="Distance",main="Complete linkage")
plot(hclust(dist(track_features.df), method="average"), labels=FALSE, ylab="Distance",main="Average linkage")
plot(hclust(dist(track_features.df), method="median"), labels=FALSE, ylab="Distance",main="Median linkage")
plot(hclust(dist(track_features.df), method="centroid"), labels=FALSE, ylab="Distance",main="Centroid linkage")
plot(hclust(dist(track_features.df), method="ward.D"), labels=FALSE, ylab="Distance",main="Ward's linkage")
plot(hclust(dist(track_features.df), method="ward.D2"), labels=FALSE, ylab="Distance",main="Ward's 2 linkage")
(hclust(dist(track_features.df), method="mcquitty"), labels=FALSE, ylab="Distance",main="McQuitty linkage")
#par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, ylab="Distance",main="Complete linkage")
plot(hclust(dist(track_features.df), method="average"), labels=FALSE, ylab="Distance",main="Average linkage")
plot(hclust(dist(track_features.df), method="median"), labels=FALSE, ylab="Distance",main="Median linkage")
plot(hclust(dist(track_features.df), method="centroid"), labels=FALSE, ylab="Distance",main="Centroid linkage")
plot(hclust(dist(track_features.df), method="ward.D"), labels=FALSE, ylab="Distance",main="Ward's linkage")
plot(hclust(dist(track_features.df), method="ward.D2"), labels=FALSE, ylab="Distance",main="Ward's 2 linkage")
plot(hclust(dist(track_features.df), method="mcquitty"), labels=FALSE, ylab="Distance",main="McQuitty linkage")
#par(mfrow=c(1, 1))
#par(mfrow=c(1, 3))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, xlab="", ylab="Distance",main="Single linkage")
plot(hclust(dist(track_features.df), method="complete"), labels=FALSE, xlab="", ylab="Distance",main="Complete linkage")
plot(hclust(dist(track_features.df), method="average"), labels=FALSE, xlab="", ylab="Distance",main="Average linkage")
plot(hclust(dist(track_features.df), method="median"), labels=FALSE, xlab="", ylab="Distance",main="Median linkage")
plot(hclust(dist(track_features.df), method="centroid"), labels=FALSE, xlab="", ylab="Distance",main="Centroid linkage")
plot(hclust(dist(track_features.df), method="ward.D"), labels=FALSE, xlab="", ylab="Distance",main="Ward's linkage")
plot(hclust(dist(track_features.df), method="ward.D2"), labels=FALSE, xlab="", ylab="Distance",main="Ward's 2 linkage")
plot(hclust(dist(track_features.df), method="mcquitty"), labels=FALSE, xlab="", ylab="Distance",main="McQuitty linkage")
#par(mfrow=c(1, 1))
## Produce dendrograms for 3 different linakges.
plot(hclust(dist(track_features.df), method="single"), labels=FALSE, xlab="", ylab="Distance", sub="", main="Single linkage")
